{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6589,"status":"ok","timestamp":1699456857605,"user":{"displayName":"謝奕葳","userId":"08140020758096461013"},"user_tz":-480},"id":"aZmber_Uccqb","outputId":"e0967dc2-9bdc-4431-cd4e-712f76ad861b"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: kaggle in /usr/local/lib/python3.10/dist-packages (1.5.16)\n","Requirement already satisfied: six>=1.10 in /usr/local/lib/python3.10/dist-packages (from kaggle) (1.16.0)\n","Requirement already satisfied: certifi in /usr/local/lib/python3.10/dist-packages (from kaggle) (2023.7.22)\n","Requirement already satisfied: python-dateutil in /usr/local/lib/python3.10/dist-packages (from kaggle) (2.8.2)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from kaggle) (2.31.0)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from kaggle) (4.66.1)\n","Requirement already satisfied: python-slugify in /usr/local/lib/python3.10/dist-packages (from kaggle) (8.0.1)\n","Requirement already satisfied: urllib3 in /usr/local/lib/python3.10/dist-packages (from kaggle) (2.0.7)\n","Requirement already satisfied: bleach in /usr/local/lib/python3.10/dist-packages (from kaggle) (6.1.0)\n","Requirement already satisfied: webencodings in /usr/local/lib/python3.10/dist-packages (from bleach->kaggle) (0.5.1)\n","Requirement already satisfied: text-unidecode>=1.3 in /usr/local/lib/python3.10/dist-packages (from python-slugify->kaggle) (1.3)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->kaggle) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->kaggle) (3.4)\n"]}],"source":["!pip install kaggle\n","import numpy as np\n","import pandas as pd\n","import xgboost as xg\n","import os\n","import matplotlib.pyplot as plt\n","import tensorflow as tf\n","from sklearn.linear_model import LinearRegression\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import mean_squared_log_error\n","from sklearn.ensemble import HistGradientBoostingRegressor\n","from pickle import FALSE\n","%matplotlib inline"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2506,"status":"ok","timestamp":1699456868589,"user":{"displayName":"謝奕葳","userId":"08140020758096461013"},"user_tz":-480},"id":"AY4hTZY5obiw","outputId":"9b737b22-2414-4bad-bb4e-a8e7dc4c366c"},"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading store-sales-time-series-forecasting.zip to /content\n","\r  0% 0.00/21.4M [00:00<?, ?B/s]\r 42% 9.00M/21.4M [00:00<00:00, 93.9MB/s]\n","\r100% 21.4M/21.4M [00:00<00:00, 155MB/s] \n"]}],"source":["! mkdir ~/.kaggle\n","! cp kaggle.json ~/.kaggle/\n","! chmod 600 ~/.kaggle/kaggle.json\n","! kaggle competitions download -c store-sales-time-series-forecasting"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1117,"status":"ok","timestamp":1699456869702,"user":{"displayName":"謝奕葳","userId":"08140020758096461013"},"user_tz":-480},"id":"iU2JcsT474M1","outputId":"3f330335-0b6e-4788-ebab-4357f1592114"},"outputs":[{"output_type":"stream","name":"stdout","text":["Archive:  store-sales-time-series-forecasting.zip\n","  inflating: holidays_events.csv     \n","  inflating: oil.csv                 \n","  inflating: sample_submission.csv   \n","  inflating: stores.csv              \n","  inflating: test.csv                \n","  inflating: train.csv               \n","  inflating: transactions.csv        \n"]}],"source":["!unzip store-sales-time-series-forecasting"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"o-ALhGhO-BDK"},"outputs":[],"source":["train = pd.read_csv(\"../content/train.csv\")\n","test = pd.read_csv(\"../content/test.csv\")\n","stores = pd.read_csv(\"../content/stores.csv\")\n","sub = pd.read_csv(\"../content/sample_submission.csv\")\n","transactions = pd.read_csv(\"../content/transactions.csv\")\n","oil = pd.read_csv(\"../content/oil.csv\")\n","holidays_events = pd.read_csv(\"../content/holidays_events.csv\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BgQwTiO9P1x5"},"outputs":[],"source":["oil_mean=oil['dcoilwtico'].mean()\n","oil['dcoilwtico'].fillna(oil_mean, inplace=True)\n","train=train.merge(oil, how='left', on='date')\n","train['dcoilwtico'].fillna(oil_mean, inplace=True)\n","test=test.merge(oil, how='left', on='date')\n","test['dcoilwtico'].fillna(oil_mean, inplace=True)\n","train=train.merge(stores, how=\"left\", on=\"store_nbr\")\n","train['store_type']=train['type']\n","train=train.drop(\"type\", axis=1)\n","test=test.merge(stores, how=\"left\", on=\"store_nbr\")\n","test[\"store_type\"]=test[\"type\"]\n","test=test.drop(\"type\", axis=1)\n","train=train.merge(holidays_events, how=\"left\", on=\"date\")\n","train[\"type\"].fillna(\"\", inplace=True)\n","train[\"locale\"].fillna(\"\", inplace=True)\n","train[\"transferred\"].fillna(False, inplace=True)\n","test=test.merge(holidays_events, how=\"left\", on=\"date\")\n","test[\"type\"].fillna(\"\", inplace=True)\n","test[\"locale\"].fillna(\"\", inplace=True)\n","test[\"transferred\"].fillna(False, inplace=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":15876,"status":"ok","timestamp":1699456903962,"user":{"displayName":"謝奕葳","userId":"08140020758096461013"},"user_tz":-480},"id":"VPTCnzlgRXN5","outputId":"7be3e017-5d14-438b-c12a-947f5ec2dc8d"},"outputs":[{"output_type":"stream","name":"stdout","text":["date\n","family\n","city\n","state\n","type\n","cluster\n","store_type\n","locale\n","transferred\n"]}],"source":["label_encoder=LabelEncoder()\n","object_columns=['date', 'family', 'city', 'state', 'type', 'cluster', \"store_type\", \"locale\", \"transferred\"]\n","for column in object_columns:\n","  combined_data=pd.concat([train[column], test[column]], axis=0)\n","  label_encoder.fit(combined_data)\n","  train[column]=label_encoder.transform(train[column])\n","  test[column]=label_encoder.transform(test[column])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"p4-yWMkFSRIa"},"outputs":[],"source":["feature_to_drop=['id', \"description\", \"locale_name\"]\n","train=train.drop(feature_to_drop, axis=1)\n","test=test.drop(feature_to_drop, axis=1)\n","X=train.drop(['sales'], axis=1)\n","y=train['sales']\n","X_train, X_test, y_train, y_test=train_test_split(X, y, test_size=0.2, random_state=42)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4837,"status":"ok","timestamp":1699456912060,"user":{"displayName":"謝奕葳","userId":"08140020758096461013"},"user_tz":-480},"id":"A_yvY-dhVzZb","outputId":"ee439cb4-31f9-42df-fda8-507d979b02a1"},"outputs":[{"output_type":"stream","name":"stdout","text":["3.630397867661413\n"]}],"source":["model=LinearRegression()\n","model.fit(X_train, y_train)\n","y_pred=model.predict(X_test)\n","y_pred=np.array([max(i, 0) for i in y_pred])\n","#print(mean_squared_log_error(y_pred, y_test, squared=False))\n","HGBR_model=HistGradientBoostingRegressor(max_iter=3000)\n","HGBR_model.fit(X_train, y_train)\n","y_pred=HGBR_model.predict(X_test)\n","y_pred=np.array([max(i,0) for i in y_pred])\n","#print(mean_squared_log_error(y_pred, y_test, squared=False))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"edIhoMy2X8X-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1699457469691,"user_tz":-480,"elapsed":200821,"user":{"displayName":"謝奕葳","userId":"08140020758096461013"}},"outputId":"4224b8fb-5553-4978-ce29-c7a7dd548713"},"outputs":[{"output_type":"stream","name":"stdout","text":["1.1996680856726698\n"]}],"source":["XGB_model=xg.XGBRegressor(n_estimators=400, learning_rate=0.03, max_depth=12)\n","XGB_model.fit(X_train, y_train)\n","y_pred=XGB_model.predict(X_test)\n","y_pred=np.array([max(i,0) for i in y_pred])\n","pred = XGB_model.predict(test)\n","pred=np.array([max(i,0) for i in pred])\n","sub['sales']=pred"]},{"cell_type":"code","source":["sub.to_csv('/content/sub.csv', index=False, header=True)"],"metadata":{"id":"gZz5du9XmPOb"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"provenance":[]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}